<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <bean id="commPropertiesConfiguration" class="com.zhjg.ssm.util.CommPropertiesConfiguration"></bean> -->

	<!-- 当属性文件有多个时,可以通过locations配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<!-- 阿里 druid数据库连接池:有这段配置已经可以使用连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>



	<!-- 扫描并加载service组件 -->
	<context:component-scan base-package="com.zhjg.mybatis.plus.service"></context:component-scan>

	<mvc:annotation-driven />

	<bean id="sqlSessionFactory"
		class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置Mybatis配置文件 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<!-- 配置别名包路径 -->
		<property name="typeAliasesPackage" value="com.zhjg.mybatis.plus.entity" />
		<!-- 配置Mapper扫描路径（IDEA系列编辑器需要特别注意，因为IDEA的设置问题，src中的xml文件是不会被编译的，如果放在src中可能会报错，
			解决办法：将映射文件放到src/main/resources源文件夹下，maven会自动打到war包中（在web项目中） 
			常用问题-Invalid bound statement (not found) 错误如何解决?） -->
		<property name="mapperLocations" value="classpath:com/zhjg/mybatis/plus/mapper/xml/*Mapper.xml" />
		<!-- 插件配置项 -->
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql" />
				</bean>
			</array>
		</property>
		<!-- 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig" />
	</bean>
	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!-- AUTO->`0`("数据库ID自增") INPUT->`1`(用户输入ID") ID_WORKER->`2`("全局唯一ID") 
			UUID->`3`("全局唯一ID") -->
		<!-- mysql只有当主键为int时可以自动递增 -->
		<property name="idType" value="0" />
		<!-- MYSQL->`mysql` ORACLE->`oracle` DB2->`db2` H2->`h2` HSQL->`hsql` SQLITE->`sqlite` 
			POSTGRE->`postgresql` SQLSERVER2005->`sqlserver2005` SQLSERVER->`sqlserver` -->
		<!-- Oracle需要添加该项 -->
		<!-- <property name="dbType" value="oracle" /> -->
		<!-- 全局表为下划线命名设置 true -->
		<property name="dbColumnUnderline" value="true" />
	</bean>
	<!-- 配置Mapper扫描路径 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhjg.mybatis.plus.mapper" />
	</bean>

</beans>